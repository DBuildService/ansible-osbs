---
# set hostname of the machine
# DO NOT USE THIS IN group_vars/all WHEN DEPLOYING ON MORE THAN ONE MACHINE
#hostname: example.org

# Method to obtain atomic-reactor image, currently supported are:
# pull - pull the image from a registry
# git  - build the image from git repository
#atomic_reactor_source: pull

# Configuration for atomic_reactor_source == pull
#atomic_reactor_pull:
#  registry: registry.hub.docker.com
#  image: slavek/atomic-reactor:latest

# Configuration for atomic_reactor_source == git
#atomic_reactor_git:
#  # base image source
#  base_registry: registry.hub.docker.com
#  base_image: library/fedora:latest
#  # allow retagging the base image to match FROM in Dockerfile
#  base_image_retag: fedora:latest
#  # Dockerfile source
#  git_url: https://github.com/projectatomic/atomic-reactor.git
#  git_branch: master
#  git_subdir: ""
#  git_local_path: "{{ ansible_env.HOME }}/atomic-reactor-buildroot"

# Docker needs to know which registries are insecure. If you're pulling
# atomic-reactor image from insecure registry you also need to put it here.
#insecure_registries:
#  - registry.example.org

# set to false if you don't use firewalld or do not want the playbook to modify it
#manage_firewall: true

## for authenticating the proxy to openshift using self-signed certificate
#proxy_auth_generate_selfsigned: true
#proxy_auth_cert_file: "{{ openshift_home }}/proxy_auth_cert.pem"
#proxy_auth_key_file: "{{ openshift_home }}/proxy_auth_key.pem"
#proxy_auth_ca_file: "{{ proxy_auth_cert_file }}"

# used for mutually authenticating the proxy and the proxied machine
#proxy_machine_ca_file: /var/lib/openshift/openshift.local.certificates/ca/cert.crt
#proxy_machine_cert_file: /var/lib/openshift/proxy_auth_cert.pem
#proxy_machine_key_file: /var/lib/openshift/proxy_auth_key.pem

## kerberos auth
#proxy_type: kerberos
#kerberos_client_realm_name: EXAMPLE.COM
#kerberos_client_kdc_hostname: kerberos.brq
#kerberos_client_admin_hostname: kerberos.brq

## http basic auth
#proxy_type: basic
#proxy_basic_users:
#  - user: test
#    password: test

# manually assign openshift user account to an IP or IP range
#proxy_ip_whitelist:
#  - subnet: 1.2.3.4
#    user: kojibuilder

# openshift authorization - which users should be assigned the view (readonly),
# osbs-builder (readwrite), and cluster-admin (admin) roles

## in default configuration, everyone has read/write access:
#readonly_users: []
#readonly_groups: []
#readwrite_users: []
#readwrite_groups:
#  - system:authenticated
#  - system:unauthenticated
#admin_users: []
#admin_groups: []

## development w/ auth proxy:
#readonly_users: []
#readonly_groups: []
#readwrite_users: []
#readwrite_groups:
#  - system:authenticated
#admin_users: []
#admin_groups: []

## example production configuration:
#readonly_users: []
#readonly_groups:
#  - system:authenticated
#readwrite_groups: []
#readwrite_users:
#  - kojibuilder
#  - "{{ ansible_hostname }}"
#admin_users:
#  - foo@EXAMPLE.COM
#  - bar@EXAMPLE.COM
#admin_groups: []
