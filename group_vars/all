---
# set hostname of the machine
# DO NOT USE THIS IN group_vars/all WHEN DEPLOYING ON MORE THAN ONE MACHINE
#hostname: example.org

# create build image from source or pull it from a registry?
# see options below
#buildroot_from_source: false

## for build_buildroot_from_source=false
#buildroot_pull:
#  registry: registry.hub.docker.com
#  registry_insecure: false
#  image: slavek/atomic-reactor:latest

## for build_buildroot_from_source=true
#buildroot_build:
#  # buildroot base image source
#  base_registry: registry.hub.docker.com
#  base_registry_insecure: false
#  base_image: library/fedora:latest
#  # allow retagging the base image to match FROM in Dockerfile
#  base_image_retag: fedora:latest
#  # buildroot dockerfile source
#  git_url: https://github.com/mmilata/osbs-buildroot-osv3.git
#  git_branch: master
#  git_subdir: ""
#  git_local_path: "{{ ansible_env.HOME }}/osbs-buildroot-docker"

## docker needs to know which registries are insecure
#insecure_registries:
#  - registry.example.org

## for authenticating the proxy to openshift using self-signed certificate
#proxy_auth_generate_selfsigned: true
#proxy_auth_cert_file: "{{ openshift_home }}/proxy_auth_cert.pem"
#proxy_auth_key_file: "{{ openshift_home }}/proxy_auth_key.pem"
#proxy_auth_ca_file: "{{ proxy_auth_cert_file }}"

## kerberos
#kerberos_client_realm_name: EXAMPLE.COM
#kerberos_client_kdc_hostname: kerberos.brq
#kerberos_client_admin_hostname: kerberos.brq

#proxy_authname: OSBS Kerberos Authentication

# used for mutually authenticating the proxy and the proxied machine
#proxy_machine_ca_file: /var/lib/openshift/openshift.local.certificates/ca/cert.crt
#proxy_machine_cert_file: /var/lib/openshift/proxy_auth_cert.pem
#proxy_machine_key_file: /var/lib/openshift/proxy_auth_key.pem

# set to false if you don't use firewalld or do not want the playbook to modify it
#manage_firewall: true
